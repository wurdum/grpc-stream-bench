kind: pipeline
type: docker
name: default

platform:
  os: linux
  arch: amd64

volumes:
- name: dist
  temp: {}

environment:
  CONSUMER_APP_ARCHIVE: /dist/consumer.tgz
  CONSUMER_APP_EXEC: GrpcStreamBenchmark.Consumer
  CONSUMER_APP_PORT: 5001
  PRODUCER_APP_ARCHIVE: /dist/producer.tgz
  PRODUCER_APP_EXEC: GrpcStreamBenchmark.Producer
  PRODUCER_APP_PORT: 5002

steps:
- name: build
  image: mcr.microsoft.com/dotnet/sdk:7.0
  volumes:
  - name: dist
    path: /dist
  commands:
  - |
    dotnet build src/GrpcStreamBenchmark.Consumer/GrpcStreamBenchmark.Consumer.csproj -o /dist/consumer -c Release --runtime linux-x64 --self-contained
    dotnet build src/GrpcStreamBenchmark.Producer/GrpcStreamBenchmark.Producer.csproj -o /dist/producer -c Release --runtime linux-x64 --self-contained
    tar -czf $CONSUMER_APP_ARCHIVE -C /dist/consumer .
    tar -czf $PRODUCER_APP_ARCHIVE -C /dist/producer .

- name: provision
  image: hashicorp/terraform:1.3.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: AWS_SECRET_ACCESS_KEY
  commands:
  - |
    cd deploy/provision

    terraform init
    terraform apply -auto-approve

- name: configure
  image: wurdum/ansible:1.0.0@sha256:fb9cbe30feefddee370855f8c7a069b0bcd2f9d46dfe8b495a5b88ecd5f2ed9a
  volumes:
  - name: dist
    path: /dist
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: AWS_SECRET_ACCESS_KEY
    AWS_SSH_KEY:
      from_secret: AWS_SSH_KEY
    AWS_BASTION_HOST:
      from_secret: AWS_BASTION_HOST
  commands:
  - |
    cd deploy/configure

    echo "Setting up SSH keys and config..."
    mkdir ~/.ssh
    sed -e "s/{{ bastion }}/$AWS_BASTION_HOST/g" ./templates/ssh.config > ~/.ssh/config
    echo $AWS_SSH_KEY | openssl base64 -A -d > ~/.ssh/id_rsa
    chmod 700 ~/.ssh
    chmod 600 ~/.ssh/id_rsa

    echo "Running Ansible..."
    ansible-playbook site.yml -D --extra-vars "app_group=consumer app_archive=$CONSUMER_APP_ARCHIVE"
    ansible-playbook site.yml -D --extra-vars "app_group=producer app_archive=$PRODUCER_APP_ARCHIVE"
  depends_on:
  - build
  - provision

---
kind: pipeline
type: docker
name: destroy

platform:
  os: linux
  arch: amd64

steps:
- name: destroy
  image: hashicorp/terraform:1.3.7
  environment:
    AWS_ACCESS_KEY_ID:
      from_secret: AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY:
      from_secret: AWS_SECRET_ACCESS_KEY
  commands:
  - |
    cd deploy/provision
    terraform destroy -auto-approve
